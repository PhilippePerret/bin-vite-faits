# encoding: UTF-8
=begin

  Ce module permet d'assistant √† tout ce qui concerne les op√©rations
  √Ä savoir :
    - la cr√©ation du fichier op√©ration lui-m√™me
    - la lecture des op√©rations √† ex√©cuter
    - l'assistance de l'enregistrement de la voix

=end
class ViteFait
  def assistant_creation_file
    require_relative 'assistant/define_operations'
    exec
  rescue NotAnError => e
    e.puts_error_if_message
    return false
  end

  # Ouvrir le fichier op√©rations, en lecture ou en √©dition
  # Avec l'option '-e/--edit', le fichier est ouvert en √©dition dans Vim
  # Avec l'option '-t/--titre', on affiche une vision simple avec seulement
  # les titres et les dur√©es approximatives des op√©rations.
  def exec_open_operations_file
    operations_are_defined?(required=true) || return
    if COMMAND.options[:edit]
      system('vim', operations_path)
    else
      clear
      notice "=== OP√âRATIONS D√âFINIES ===\n\n"
      if COMMAND.options[:titre]
        overview_operations_by_titre
        puts <<-EOT
\n\n\n
  Modifier : vite-faits -e open-operations [#{name}]
  Textes   : vite-faits open-operations [#{name}]
  Capture  : vite-faits lire_operations [#{name}]

        EOT
      else
        full_overview_operations
        puts <<-EOT
\n\n\n
  Modifier : vite-faits -e open-operations [#{name}]
  Dur√©e    : vite-faits -t open-operations [#{name}]
  Capture  : vite-faits lire_operations [#{name}]

        EOT
      end
    end
  end

  # Aper√ßu par titre, avec la dur√©e de chaque op√©ration
  def overview_operations_by_titre
    puts "(aper√ßu par titre et dur√©e)\n\n"
    duree_totale = 0
    get_operations.each do |dope|
      operation = Operation.new(dope)
      puts "    " + operation.line_with_duree(duree_totale)
      duree_totale += operation.duree_estimee
    end
  end

  def full_overview_operations

    colwidth = Operation.column_width
    avant  = " "*(colwidth / 2)
    titreLen = Operation.titreWidth

    entete =  (" " * Operation.margin) +
              ( "   Titre".ljust(titreLen)) +
              (avant+'XXXX').ljust(colwidth).sub(/XXXX/,"\033[1;47m üéß \033[0m") +
              (" " * Operation.gutter) +
              (avant+'XXXX').ljust(colwidth).sub(/XXXX/,"\033[1;47m üé§ \033[0m")

    puts entete
    get_operations.each do |dope|
      ope = Operation.new(dope)
      ope.display
    end
    puts "\n\n(pour √©diter les op√©rations : vite-faits operations #{name} -e/--edit)"
  end


end #/ViteFait
